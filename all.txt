practical 2

1.create Table:

SQL>create table employee(empno int,ename varchar(10),job varchar(10),mgr int,sal int);
SQL>desc employee;

2.add commission column:

SQL>alter table employee add(commission int);
SQL>desc employee;

3.insert five records:

SQL>insert into employeee values(101,'Janhavi','CEO',1234,1000000,'70');
SQL>insert into employeee values(102,'Siddharth','Vice-CEO',2345,900000,'65');
SQL>insert into employeee values(103,'Jayesh','Manager',3456,850000,'65');
SQL>insert into employeee values(104,'Ramesh','Co-Manager',4567,870000,'55');
SQL>insert into employeee values(105,'Abhishek','Jr-Manager',5678,830000,'50');
SQL>select *from employee;

4.update column details of job:

SQL>update employee set job='trainee' where empno=103;
SQL>select *from employee;

5.Rename column: 
SQL>alter table employee column mgr to manager_no;
SQL>desc employee;

6.Delete empno is 105:

SQL>delete from employee where empno=105;
SQL>select *from employee;

practical 3

1.create table:

SQL>create table employee(EMPNO varchar(10),EMP_NAME varchar(10),DEPT varchar(10),SALARY int,DOJ DATE,BRANCH varchar(10));
SQL>insert into employee values('E101','Amit','Production',45000,'2000-03-12','Bangalore');
SQL>insert into employee values('E102','Amit','HR',70000,'2002-07-03','Mysore');
SQL>insert into employee values('E103','Sunita','
Management',120000,'2001-01-11','Mysore');
SQL>insert into employee values('E104','Sunita','IT',67000,'2001-08-01','Mumbai');
SQL>insert into employee values('E105','Mahesh','Civil',145000,'2003-09-20','Mumbai');
SQL>select *from employee;

2.Retrieve employee number and salary:

SQL>select EMPNO,SALARY from employee;

3.Retrieve Average Salary:

SQL>select AVG(SALARY)from employee;

4.Retrieve number of employee:

SQL>select COUNT(*) from employee;

5.Retrieve distinct number of employee:

SQL>select COUNT(DISTINCT EMP_NAME) from employee;

6.Retrieve total salary of employee group by employee name and count similiar names:

SQL>select EMP_NAME,SUM(SALARY),COUNT(*) from employee
   >GROUP BY(EMP_NAME);


7.Retrieve total salary of employee which is greater than>120000: 

SQL>select EMP_NAME,SUM(SALARY),COUNT(*) from employee
   >GROUP BY(EMP_NAME)
   >HAVING SUM(SALARY)>120000;

8.Display name of employee in descending order:

SQL>select EMP_NAME from employee
   >ORDER BY EMP_NAME desc;

9.Display details of employee whose name is AMIT and salary greater than 500000:

SQL>select *from employee
   >WHERE EMP_NAME = 'Amit'and SALARY>50000; 

practical 4

1. Table College:

SQL>create table college(NAME varchar(10),ID int(5),DEPT_NAME varchar(10));
SQL>insert into college values('JANHAVI',1,'COMPUTER');
SQL>insert into college values('JAYESH',2,'CIVIL');
SQL>insert into college values('PRIETY',3,'COMPUTER');
SQL>select *from college;

2. Table University:

SQL>create table university(NAME varchar(10),ID int(5),DEPT_NAME varchar(10),CITY varchar(10));
SQL>insert into university values('PRIETY',3,'COMPUTER','AHMEDNAGAR');
SQL>insert into university values('JAYESH',2,'CIVIL','NAGPUR');
SQL>insert into university values('SIDDHARTH',3,'ACTOR','MUMBAI');
SQL>select *from university;

3. Union:

SQL>select NAME,ID,DEPT_NAME from college
   >UNION
   >select NAME,ID,DEPT_NAME from university;

4. Intersect:

SQL>select NAME,ID,DEPT_NAME from college
   >INTERSECT
   >select NAME,ID,DEPT_NAME from university;

practical 5

1. Table orders:

SQL>create table orders(O_Id int(5),Orderno int(5),P_Id int(3));
SQL>insert into orders values(1,77895,3);
SQL>insert into orders values(2,44678,3);
SQL>insert into orders values(3,22456,1);
SQL>insert into orders values(4,24562,1);
SQL>insert into orders values(5,34764,15);
SQL>select *from orders;

2. Table persons:

SQL>create table persons(P_Id int(5),LASTNAME varchar(10),FIRSTNAME varchar(10),Address varchar(10),City varchar(10));
SQL>insert into persons values(1,'Hansen','Ola','Timotcivn 10','Sadnes');
SQL>insert into persons values(2,'Svendson','Tove','Borgn 23','Sandnes');
SQL>insert into persons values(3,'Petterson','Kari','Storgt 20','Stavanger');
SQL>select *from persons;

3. Left Join:

SQL>select persons.LASTNAME,persons.FIRSTNAME,orders.Orderno from persons
   >left join orders
   >on persons.P_Id = orders.P_Id
   >order by persons.LASTNAME;


4. Right Join:

SQL>select persons.LASTNAME,persons.FIRSTNAME,orders.Orderno from persons
   >RIGHT OUTER JOIN orders
   >on persons.P_Id = orders.P_Id
   >order by persons.LASTNAME;


5. Inner Join:

SQL>select persons.LASTNAME,persons.FIRSTNAME,orders.Orderno from persons
   >INNER JOIN orders
   >on persons.P_Id = orders.P_Id
   >order by persons.LASTNAME;


practical 6

1. Create a view:

SQL>create view EMPVIEW as select
   >EMPLOYEE_NAME,EMPLOYEE_NO,DEPT_NAME,DEPT_NO,DATE_OF_JOIN from EMPLOYEE;
SQL>desc EMPVIEW;

2. Display View:

SQL>select *from EMPVIEW;

3. Insert in view:

SQL>insert into EMPVIEW values('SRI',120,'CSE',67,'1981-11-16');
SQL>select *from EMPVIEW;

4. Delete in view:

SQL>delete from EMPVIEW where EMPLOYEE_NAME = 'SRI';
SQL>select *from EMPVIEW;

5. Update:

SQL>update EMPVIEW set EMPLOYEE_NAME = 'KAVI' where EMPLOYEE_NAME='RAVI';
SQL>select *from EMPVIEW;

6. Drop:

SQL>drop view EMPVIEW;

practical 7:

Table 1:

1. Create trigger:

SQL>create database triggers;
SQL>use triggers;
SQL>create table student(sid int(20) primary key,sname varchar(20),address varchar(20),marks int(20));
SQL>create trigger sample_insert before insert on student for each row set new.marks = new.marks+5;

2. Inserting values in Trigger:

SQL>insert into student values(1,'aaa','Pune',76);
SQL>insert into student values(2,'bbb','Hyd',70);
SQL>insert into student values(3,'ccc','Chd',36);
SQL>insert into student values(4,'ddd','Delhi',35);
SQL>select *from student; 

Table 2:

1. Create trigger:

SQL>create table doctor(did int(20) primary key,dname varchar(20),address varchar(20),age int(20),city varchar(20));
SQL>create trigger sample_insert before insert on doctor for each row set new.age = new.age-2;

2. Inserting values in Trigger:

SQL>insert into doctor values(1,'ramesh','himayatnagar',34,'hyderabad');
SQL>insert into doctor values(2,'jogit','dilsukhnagar',35,'hyderabad');
SQL>insert into doctor values(3,'gupta','mehandipatnam',37,'hyderabad');
SQL>insert into doctor values(4,'atmaram','begumpet',38,'hyderabad');
SQL>select *from doctor; 